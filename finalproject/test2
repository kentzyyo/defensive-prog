import sys
import requests
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QPushButton, QMessageBox
from geopy.geocoders import Nominatim

class WeatherApp(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Weather App")
        self.setGeometry(100, 100, 400, 200)

        self.init_ui()

    def init_ui(self):
        self.label_city = QLabel("Enter city name:", self)
        self.label_city.move(20, 20)

        self.entry_city = QLineEdit(self)
        self.entry_city.setGeometry(150, 20, 200, 25)

        self.button_weather = QPushButton("Get Weather", self)
        self.button_weather.setGeometry(150, 50, 100, 30)
        self.button_weather.clicked.connect(self.fetch_weather)

        self.label_location = QLabel("Enter location:", self)
        self.label_location.move(20, 90)

        self.entry_location = QLineEdit(self)
        self.entry_location.setGeometry(150, 90, 200, 25)

        self.button_location = QPushButton("Get Location Details", self)
        self.button_location.setGeometry(150, 120, 150, 30)
        self.button_location.clicked.connect(self.fetch_location)

    def get_weather(self, city):
        api_key = "8138bf87612c86cbe7676267267eabc2"  # Replace with your OpenWeatherMap API key
        base_url = "http://api.openweathermap.org/data/2.5/weather?"
        complete_url = f"{base_url}q={city}&appid={api_key}&units=metric"

        response = requests.get(complete_url)
        data = response.json()

        if response.status_code == 200:
            city_name = data["name"]
            weather_desc = data["weather"][0]["description"]
            temperature = data["main"]["temp"]
            humidity = data["main"]["humidity"]
            wind_speed = data["wind"]["speed"]

            weather_info = f"Weather in {city_name}: {weather_desc}\nTemperature: {temperature}Â°C\nHumidity: {humidity}%\nWind Speed: {wind_speed} m/s"
            QMessageBox.information(self, "Weather Information", weather_info)
        else:
            QMessageBox.critical(self, "Error", "Error fetching weather data. Please try again later.")

    def get_location_autocomplete(self, query):
        geolocator = Nominatim(user_agent="weather_app")
        location = geolocator.geocode(query)
        if location:
            location_info = f"Location: {location.address}\nLatitude: {location.latitude}, Longitude: {location.longitude}"
            QMessageBox.information(self, "Location Details", location_info)
        else:
            QMessageBox.critical(self, "Error", "Location not found. Please enter a valid location.")

    def fetch_weather(self):
        city_input = self.entry_city.text()
        self.get_weather(city_input)

    def fetch_location(self):
        location_input = self.entry_location.text()
        self.get_location_autocomplete(location_input)

def main():
    app = QApplication(sys.argv)
    weather_app = WeatherApp()
    weather_app.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
